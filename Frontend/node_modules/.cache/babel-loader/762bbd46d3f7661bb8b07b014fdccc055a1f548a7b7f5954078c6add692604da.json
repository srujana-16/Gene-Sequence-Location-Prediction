{"ast":null,"code":"var _jsxFileName = \"D:\\\\AI-Model-Training-Deployment-Genome-Sequencing_Girlgenius\\\\Frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Login from './components/Login';\nimport MainContent from './MainContent';\nimport PredictionPage from './components/PredictionPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [predictionData, setPredictionData] = useState(null);\n\n  // Callback function to set the user as logged in\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n  };\n\n  // Callback function to set the user as logged out\n  const handleLogout = () => {\n    const confirmLogout = window.confirm('Are you sure you want to logout?');\n    if (confirmLogout) {\n      setIsLoggedIn(false);\n      window.location.href = '/login';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logout-button\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/prediction\",\n            children: /*#__PURE__*/_jsxDEV(PredictionPage, {\n              predictionData: predictionData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            children: /*#__PURE__*/_jsxDEV(Login, {\n              onLogin: handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(MainContent, {\n              setPredictionData: setPredictionData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"RtH4oXDdTlaPi7ViHGyAEaWGL+0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Switch","Login","MainContent","PredictionPage","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","predictionData","setPredictionData","handleLogin","handleLogout","confirmLogout","window","confirm","location","href","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","path","onLogin","_c","$RefreshReg$"],"sources":["D:/AI-Model-Training-Deployment-Genome-Sequencing_Girlgenius/Frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport Login from './components/Login';\r\nimport MainContent from './MainContent';\r\nimport PredictionPage from './components/PredictionPage';\r\n\r\nfunction App() {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [predictionData, setPredictionData] = useState(null);\r\n\r\n    // Callback function to set the user as logged in\r\n    const handleLogin = () => {\r\n        setIsLoggedIn(true);\r\n    };\r\n\r\n    // Callback function to set the user as logged out\r\n    const handleLogout = () => {\r\n        const confirmLogout = window.confirm('Are you sure you want to logout?');\r\n        if (confirmLogout) {\r\n            setIsLoggedIn(false);\r\n            window.location.href = '/login';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"app\">\r\n                {isLoggedIn && (\r\n                    <div className=\"logout-button\" onClick={handleLogout}>\r\n                        Logout\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"content\">\r\n                    <Switch>\r\n                        <Route path=\"/prediction\">\r\n                            <PredictionPage predictionData={predictionData} />\r\n                        </Route>\r\n                        <Route path=\"/login\">\r\n                            <Login onLogin={handleLogin} />\r\n                        </Route>\r\n                        {/* Other routes... */}\r\n                        <Route path=\"/\">\r\n                            <MainContent setPredictionData={setPredictionData} />\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}