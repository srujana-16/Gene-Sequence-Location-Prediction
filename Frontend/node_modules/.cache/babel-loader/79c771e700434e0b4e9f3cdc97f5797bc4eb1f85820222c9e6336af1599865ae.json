{"ast":null,"code":"var _jsxFileName = \"/home/sruj/Downloads/AI-Model-Training-Deployment-Genome-Sequencing_Girlgenius/Frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Login from './components/Login/Login';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(localStorage.getItem('isLoggedIn') === 'true');\n  const [loginData, setLoginData] = useState({\n    name: '',\n    email: '',\n    selectedLanguage: ''\n  });\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  // Fetch the number of transcripts in the database to display in navigation panel\n  useEffect(() => {\n    // Fetch the list of transcript files \n    axios.get(`${process.env.PUBLIC_URL}/Original data/transcripts/`).then(response => {\n      // Filter and count the transcript files based on your naming convention\n      const transcriptFiles = response.data.filter(file => file.startsWith('transcript'));\n      setNumberOfTranscripts(transcriptFiles.length);\n    }).catch(error => {\n      console.error('Error fetching transcript files', error);\n    });\n  }, []);\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n    localStorage.setItem('isLoggedIn', 'true'); // Set login state in localStorage\n  };\n\n  const handleLogout = () => {\n    const confirmLogout = window.confirm(\"Are you sure you want to logout?\");\n    if (confirmLogout) {\n      setIsLoggedIn(false);\n      localStorage.setItem('isLoggedIn', 'false'); // Set login state in localStorage to false\n    }\n  };\n\n  const nodemailer = require('nodemailer');\n  require('dotenv').config();\n  const handleSendLoginDataEmail = () => {\n    const loginData = localStorage.getItem('loginData');\n    const emailPassword = process.env.EMAIL_PASSWORD;\n    if (loginData) {\n      const templateParams = {\n        from_name: 'Your Name',\n        to_email: 'vankasrujana@gmail.com',\n        // Replace with recipient's email address\n        message: 'Attached is the login_data.txt file.',\n        attachment: {\n          name: 'login_data.txt',\n          data: JSON.stringify(JSON.parse(loginData), null, 2)\n        }\n      };\n      emailjs.send('service_wfvldle', 'template_7j3t54v', templateParams, 'T2YzQ7CVLXV_pylAB').then(function (response) {\n        alert('Mail has been sent successfully');\n      }, function (error) {\n        console.error('Error sending email:', error);\n      });\n    } else {\n      alert('No login data found.');\n    }\n  };\n  const handleChunkSelect = async chunkNumber => {\n    console.log(`chunk number: ${chunkNumber}`);\n    setSelectedChunk(chunkNumber);\n    setTranscriptNumber(chunkNumber);\n    setIsAudio(true);\n    console.log(`transcriptNumber: ${chunkNumber}`);\n    try {\n      const responseText = await axios.get(`${process.env.PUBLIC_URL}/Original data/transcripts/transcript${chunkNumber.toString().padStart(4, '0')}.txt`);\n      setText(responseText.data);\n      const responseAudio = await axios.get(`${process.env.PUBLIC_URL}/Original data/audio_chunks/chunk${chunkNumber.toString().padStart(4, '0')}.wav`, {\n        responseType: 'blob'\n      });\n      const blob = new Blob([responseAudio.data]);\n      const url = URL.createObjectURL(blob);\n      setAudioSrc(url);\n      localStorage.setItem('transcriptNumber', chunkNumber);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logout-button\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"download-button\",\n        onClick: handleSendLoginDataEmail,\n        children: \"Email Login Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Navigation, {\n        numberOfChunks: numberOfTranscripts,\n        handleChunkSelect: handleChunkSelect,\n        chunkColors: chunkColors,\n        setChunkColors: setChunkColors // Pass setChunkColors to Navigation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          title: \"Speech Transcription Verification App\",\n          mode: mode,\n          toggleMode: toggleMode\n        }, new Date(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          alert: alert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App container py-3\",\n          children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Switch, {\n            children: /*#__PURE__*/_jsxDEV(AudioPlayerWithTextForm, {\n              selectedChunk: selectedChunk,\n              transcriptNumber: transcriptNumber,\n              setTranscriptNumber: setTranscriptNumber,\n              text: text,\n              audioSrc: audioSrc,\n              isAudio: isAudio,\n              setText: setText,\n              setAudioSrc: setAudioSrc,\n              setIsAudio: setIsAudio,\n              setChunkColors: setChunkColors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pfwg1WkALhqSdj+7BFrFlWTx7CA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","BrowserRouter","Router","Switch","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","localStorage","getItem","loginData","setLoginData","name","email","selectedLanguage","showAlert","message","type","setAlert","msg","setTimeout","toggleDarkMode","setDarkMode","darkMode","axios","get","process","env","PUBLIC_URL","then","response","transcriptFiles","data","filter","file","startsWith","setNumberOfTranscripts","length","catch","error","console","handleLogin","setItem","handleLogout","confirmLogout","window","confirm","nodemailer","require","config","handleSendLoginDataEmail","emailPassword","EMAIL_PASSWORD","templateParams","from_name","to_email","attachment","JSON","stringify","parse","emailjs","send","alert","handleChunkSelect","chunkNumber","log","setSelectedChunk","setTranscriptNumber","setIsAudio","responseText","toString","padStart","setText","responseAudio","responseType","blob","Blob","url","URL","createObjectURL","setAudioSrc","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Navigation","numberOfChunks","numberOfTranscripts","chunkColors","setChunkColors","Navbar","title","mode","toggleMode","Date","Alert","AudioPlayerWithTextForm","selectedChunk","transcriptNumber","text","audioSrc","isAudio","onLogin","_c","$RefreshReg$"],"sources":["/home/sruj/Downloads/AI-Model-Training-Deployment-Genome-Sequencing_Girlgenius/Frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Login from './components/Login/Login';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\n\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(localStorage.getItem('isLoggedIn') === 'true');\n\n  const [loginData, setLoginData] = useState({\n    name: '',\n    email: '',\n    selectedLanguage: '',\n  });\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n};\n\n  // Fetch the number of transcripts in the database to display in navigation panel\n  useEffect(() => {\n\n    // Fetch the list of transcript files \n    axios.get(`${process.env.PUBLIC_URL}/Original data/transcripts/`)\n      .then(response => {\n        // Filter and count the transcript files based on your naming convention\n        const transcriptFiles = response.data.filter(file => file.startsWith('transcript'));\n        setNumberOfTranscripts(transcriptFiles.length);\n      })\n      .catch(error => {\n        console.error('Error fetching transcript files', error);\n      });\n  }, []);\n  \n\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n    localStorage.setItem('isLoggedIn', 'true'); // Set login state in localStorage\n  };\n\n  const handleLogout = () => {\n    const confirmLogout = window.confirm(\"Are you sure you want to logout?\");\n    if (confirmLogout) {\n      setIsLoggedIn(false);\n      localStorage.setItem('isLoggedIn', 'false'); // Set login state in localStorage to false\n    }\n  };\n\n  const nodemailer = require('nodemailer');\n  require('dotenv').config();\n\n  const handleSendLoginDataEmail = () => {\n    const loginData = localStorage.getItem('loginData');\n    const emailPassword = process.env.EMAIL_PASSWORD;\n  \n    if (loginData) {\n      const templateParams = {\n        from_name: 'Your Name',\n        to_email: 'vankasrujana@gmail.com', // Replace with recipient's email address\n        message: 'Attached is the login_data.txt file.',\n        attachment: {\n          name: 'login_data.txt',\n          data: JSON.stringify(JSON.parse(loginData), null, 2)\n        }\n      };\n  \n      emailjs.send('service_wfvldle', 'template_7j3t54v', templateParams, 'T2YzQ7CVLXV_pylAB')\n        .then(function (response) {\n          alert('Mail has been sent successfully');\n        }, function (error) {\n          console.error('Error sending email:', error);\n        });\n    } else {\n      alert('No login data found.');\n    }\n  };\n  \n  const handleChunkSelect = async (chunkNumber) => {\n    console.log(`chunk number: ${chunkNumber}`);\n    setSelectedChunk(chunkNumber);\n    setTranscriptNumber(chunkNumber);\n    setIsAudio(true);\n    console.log(`transcriptNumber: ${chunkNumber}`)\n    try {\n\n      const responseText = await axios.get(`${process.env.PUBLIC_URL}/Original data/transcripts/transcript${chunkNumber.toString().padStart(4, '0')}.txt`);\n      setText(responseText.data);\n\n      const responseAudio = await axios.get(`${process.env.PUBLIC_URL}/Original data/audio_chunks/chunk${chunkNumber.toString().padStart(4, '0')}.wav`, {\n        responseType: 'blob'\n      });\n      const blob = new Blob([responseAudio.data]);\n      const url = URL.createObjectURL(blob);\n      setAudioSrc(url);\n      localStorage.setItem('transcriptNumber', chunkNumber);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"app\">\n        {isLoggedIn && (\n          <div className=\"logout-button\" onClick={handleLogout}>\n            Logout\n          </div>\n        )}\n\n        {isLoggedIn && (\n          <div className=\"download-button\" onClick={handleSendLoginDataEmail}>\n            Email Login Data\n          </div>\n        )}\n\n        {isLoggedIn && (\n          <Navigation\n            numberOfChunks={numberOfTranscripts}\n            handleChunkSelect={handleChunkSelect}\n            chunkColors={chunkColors}\n            setChunkColors={setChunkColors} // Pass setChunkColors to Navigation\n          />\n        )}\n        <div className=\"content\">\n          <Navbar title=\"Speech Transcription Verification App\" mode={mode} toggleMode={toggleMode} key={new Date()} />\n          <Alert alert={alert} />\n\n          <div className=\"App container py-3\">\n            {isLoggedIn ? (\n              <Switch>\n                <AudioPlayerWithTextForm\n                  selectedChunk={selectedChunk}\n                  transcriptNumber={transcriptNumber}\n                  setTranscriptNumber={setTranscriptNumber}\n                  text={text}\n                  audioSrc={audioSrc}\n                  isAudio={isAudio}\n                  setText={setText}\n                  setAudioSrc={setAudioSrc}\n                  setIsAudio={setIsAudio}\n                  setChunkColors={setChunkColors}\n                />\n              </Switch>\n            ) : (\n              <Login onLogin={handleLogin} />\n            )}\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}