{"ast":null,"code":"var _jsxFileName = \"/home/sruj/Downloads/AI-Model-Training-Deployment-Genome-Sequencing_Girlgenius/Frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport AudioPlayerWithTextForm from './components/AudioPlayerWithTextForm';\nimport Alert from './components/Alert';\nimport Login from './components/Login/Login';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport Navigation from './components/Navigation';\nimport axios from 'axios';\nimport emailjs from 'emailjs-com';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState('Loading...');\n  const [audioSrc, setAudioSrc] = useState(null);\n  const [isAudio, setIsAudio] = useState(false);\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(localStorage.getItem('isLoggedIn') === 'true');\n  const [selectedChunk, setSelectedChunk] = useState(null);\n  const [numberOfTranscripts, setNumberOfTranscripts] = useState(0);\n  const [chunkColors, setChunkColors] = useState(Array(57).fill('')); // For changing the color of the chunk buttons\n  // Using localStorage API to store the last transcript number and retrieve it when the application starts again\n  const [transcriptNumber, setTranscriptNumber] = useState(parseInt(localStorage.getItem('transcriptNumber')) || 1);\n  const [loginData, setLoginData] = useState({\n    name: '',\n    email: '',\n    selectedLanguage: ''\n  });\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n\n  // Fetch the number of transcripts in the database to display in navigation panel\n  useEffect(() => {\n    // Fetch the list of transcript files \n    axios.get(`${process.env.PUBLIC_URL}/Original data/transcripts/`).then(response => {\n      // Filter and count the transcript files based on your naming convention\n      const transcriptFiles = response.data.filter(file => file.startsWith('transcript'));\n      setNumberOfTranscripts(transcriptFiles.length);\n    }).catch(error => {\n      console.error('Error fetching transcript files', error);\n    });\n  }, []);\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n    localStorage.setItem('isLoggedIn', 'true'); // Set login state in localStorage\n  };\n\n  const handleLogout = () => {\n    const confirmLogout = window.confirm(\"Are you sure you want to logout?\");\n    if (confirmLogout) {\n      setIsLoggedIn(false);\n      localStorage.setItem('isLoggedIn', 'false'); // Set login state in localStorage to false\n    }\n  };\n\n  const nodemailer = require('nodemailer');\n  require('dotenv').config();\n  const handleSendLoginDataEmail = () => {\n    const loginData = localStorage.getItem('loginData');\n    const emailPassword = process.env.EMAIL_PASSWORD;\n    if (loginData) {\n      const templateParams = {\n        from_name: 'Your Name',\n        to_email: 'vankasrujana@gmail.com',\n        // Replace with recipient's email address\n        message: 'Attached is the login_data.txt file.',\n        attachment: {\n          name: 'login_data.txt',\n          data: JSON.stringify(JSON.parse(loginData), null, 2)\n        }\n      };\n      emailjs.send('service_wfvldle', 'template_7j3t54v', templateParams, 'T2YzQ7CVLXV_pylAB').then(function (response) {\n        alert('Mail has been sent successfully');\n      }, function (error) {\n        console.error('Error sending email:', error);\n      });\n    } else {\n      alert('No login data found.');\n    }\n  };\n  const handleChunkSelect = async chunkNumber => {\n    console.log(`chunk number: ${chunkNumber}`);\n    setSelectedChunk(chunkNumber);\n    setTranscriptNumber(chunkNumber);\n    setIsAudio(true);\n    console.log(`transcriptNumber: ${chunkNumber}`);\n    try {\n      const responseText = await axios.get(`${process.env.PUBLIC_URL}/Original data/transcripts/transcript${chunkNumber.toString().padStart(4, '0')}.txt`);\n      setText(responseText.data);\n      const responseAudio = await axios.get(`${process.env.PUBLIC_URL}/Original data/audio_chunks/chunk${chunkNumber.toString().padStart(4, '0')}.wav`, {\n        responseType: 'blob'\n      });\n      const blob = new Blob([responseAudio.data]);\n      const url = URL.createObjectURL(blob);\n      setAudioSrc(url);\n      localStorage.setItem('transcriptNumber', chunkNumber);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logout-button\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"download-button\",\n        onClick: handleSendLoginDataEmail,\n        children: \"Email Login Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Navigation, {\n        numberOfChunks: numberOfTranscripts,\n        handleChunkSelect: handleChunkSelect,\n        chunkColors: chunkColors,\n        setChunkColors: setChunkColors // Pass setChunkColors to Navigation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          title: \"Speech Transcription Verification App\",\n          mode: mode,\n          toggleMode: toggleMode\n        }, new Date(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          alert: alert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App container py-3\",\n          children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Switch, {\n            children: /*#__PURE__*/_jsxDEV(AudioPlayerWithTextForm, {\n              selectedChunk: selectedChunk,\n              transcriptNumber: transcriptNumber,\n              setTranscriptNumber: setTranscriptNumber,\n              text: text,\n              audioSrc: audioSrc,\n              isAudio: isAudio,\n              setText: setText,\n              setAudioSrc: setAudioSrc,\n              setIsAudio: setIsAudio,\n              setChunkColors: setChunkColors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"E40CsB3X9jXQIKAO6XfmhHOQK0I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","AudioPlayerWithTextForm","Alert","Login","BrowserRouter","Router","Switch","Navigation","axios","emailjs","jsxDEV","_jsxDEV","App","_s","text","setText","audioSrc","setAudioSrc","isAudio","setIsAudio","mode","setMode","alert","setAlert","isLoggedIn","setIsLoggedIn","localStorage","getItem","selectedChunk","setSelectedChunk","numberOfTranscripts","setNumberOfTranscripts","chunkColors","setChunkColors","Array","fill","transcriptNumber","setTranscriptNumber","parseInt","loginData","setLoginData","name","email","selectedLanguage","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","get","process","env","PUBLIC_URL","then","response","transcriptFiles","data","filter","file","startsWith","length","catch","error","console","handleLogin","setItem","handleLogout","confirmLogout","window","confirm","nodemailer","require","config","handleSendLoginDataEmail","emailPassword","EMAIL_PASSWORD","templateParams","from_name","to_email","attachment","JSON","stringify","parse","send","handleChunkSelect","chunkNumber","log","responseText","toString","padStart","responseAudio","responseType","blob","Blob","url","URL","createObjectURL","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","numberOfChunks","title","Date","onLogin","_c","$RefreshReg$"],"sources":["/home/sruj/Downloads/AI-Model-Training-Deployment-Genome-Sequencing_Girlgenius/Frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport AudioPlayerWithTextForm from './components/AudioPlayerWithTextForm';\nimport Alert from './components/Alert';\nimport Login from './components/Login/Login';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport Navigation from './components/Navigation';\nimport axios from 'axios';\nimport emailjs from 'emailjs-com';\n\n\n\nfunction App() {\n  const [text, setText] = useState('Loading...');\n  const [audioSrc, setAudioSrc] = useState(null);\n  const [isAudio, setIsAudio] = useState(false);\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(localStorage.getItem('isLoggedIn') === 'true');\n  const [selectedChunk, setSelectedChunk] = useState(null);\n  const [numberOfTranscripts, setNumberOfTranscripts] = useState(0); \n  const [chunkColors, setChunkColors] = useState(Array(57).fill('')); // For changing the color of the chunk buttons\n  // Using localStorage API to store the last transcript number and retrieve it when the application starts again\n  const [transcriptNumber, setTranscriptNumber] = useState(parseInt(localStorage.getItem('transcriptNumber')) || 1);\n\n\n  const [loginData, setLoginData] = useState({\n    name: '',\n    email: '',\n    selectedLanguage: '',\n  });\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n\n  // Fetch the number of transcripts in the database to display in navigation panel\n  useEffect(() => {\n\n    // Fetch the list of transcript files \n    axios.get(`${process.env.PUBLIC_URL}/Original data/transcripts/`)\n      .then(response => {\n        // Filter and count the transcript files based on your naming convention\n        const transcriptFiles = response.data.filter(file => file.startsWith('transcript'));\n        setNumberOfTranscripts(transcriptFiles.length);\n      })\n      .catch(error => {\n        console.error('Error fetching transcript files', error);\n      });\n  }, []);\n  \n\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n    localStorage.setItem('isLoggedIn', 'true'); // Set login state in localStorage\n  };\n\n  const handleLogout = () => {\n    const confirmLogout = window.confirm(\"Are you sure you want to logout?\");\n    if (confirmLogout) {\n      setIsLoggedIn(false);\n      localStorage.setItem('isLoggedIn', 'false'); // Set login state in localStorage to false\n    }\n  };\n\n  const nodemailer = require('nodemailer');\n  require('dotenv').config();\n\n  const handleSendLoginDataEmail = () => {\n    const loginData = localStorage.getItem('loginData');\n    const emailPassword = process.env.EMAIL_PASSWORD;\n  \n    if (loginData) {\n      const templateParams = {\n        from_name: 'Your Name',\n        to_email: 'vankasrujana@gmail.com', // Replace with recipient's email address\n        message: 'Attached is the login_data.txt file.',\n        attachment: {\n          name: 'login_data.txt',\n          data: JSON.stringify(JSON.parse(loginData), null, 2)\n        }\n      };\n  \n      emailjs.send('service_wfvldle', 'template_7j3t54v', templateParams, 'T2YzQ7CVLXV_pylAB')\n        .then(function (response) {\n          alert('Mail has been sent successfully');\n        }, function (error) {\n          console.error('Error sending email:', error);\n        });\n    } else {\n      alert('No login data found.');\n    }\n  };\n  \n  const handleChunkSelect = async (chunkNumber) => {\n    console.log(`chunk number: ${chunkNumber}`);\n    setSelectedChunk(chunkNumber);\n    setTranscriptNumber(chunkNumber);\n    setIsAudio(true);\n    console.log(`transcriptNumber: ${chunkNumber}`)\n    try {\n\n      const responseText = await axios.get(`${process.env.PUBLIC_URL}/Original data/transcripts/transcript${chunkNumber.toString().padStart(4, '0')}.txt`);\n      setText(responseText.data);\n\n      const responseAudio = await axios.get(`${process.env.PUBLIC_URL}/Original data/audio_chunks/chunk${chunkNumber.toString().padStart(4, '0')}.wav`, {\n        responseType: 'blob'\n      });\n      const blob = new Blob([responseAudio.data]);\n      const url = URL.createObjectURL(blob);\n      setAudioSrc(url);\n      localStorage.setItem('transcriptNumber', chunkNumber);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"app\">\n        {isLoggedIn && (\n          <div className=\"logout-button\" onClick={handleLogout}>\n            Logout\n          </div>\n        )}\n\n        {isLoggedIn && (\n          <div className=\"download-button\" onClick={handleSendLoginDataEmail}>\n            Email Login Data\n          </div>\n        )}\n\n        {isLoggedIn && (\n          <Navigation\n            numberOfChunks={numberOfTranscripts}\n            handleChunkSelect={handleChunkSelect}\n            chunkColors={chunkColors}\n            setChunkColors={setChunkColors} // Pass setChunkColors to Navigation\n          />\n        )}\n        <div className=\"content\">\n          <Navbar title=\"Speech Transcription Verification App\" mode={mode} toggleMode={toggleMode} key={new Date()} />\n          <Alert alert={alert} />\n\n          <div className=\"App container py-3\">\n            {isLoggedIn ? (\n              <Switch>\n                <AudioPlayerWithTextForm\n                  selectedChunk={selectedChunk}\n                  transcriptNumber={transcriptNumber}\n                  setTranscriptNumber={setTranscriptNumber}\n                  text={text}\n                  audioSrc={audioSrc}\n                  isAudio={isAudio}\n                  setText={setText}\n                  setAudioSrc={setAudioSrc}\n                  setIsAudio={setIsAudio}\n                  setChunkColors={setChunkColors}\n                />\n              </Switch>\n            ) : (\n              <Login onLogin={handleLogin} />\n            )}\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}